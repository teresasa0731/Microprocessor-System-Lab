                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.8 #13684 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module write
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _sendbyte
                                     12 	.globl _CY
                                     13 	.globl _AC
                                     14 	.globl _F0
                                     15 	.globl _RS1
                                     16 	.globl _RS0
                                     17 	.globl _OV
                                     18 	.globl _F1
                                     19 	.globl _P
                                     20 	.globl _PS
                                     21 	.globl _PT1
                                     22 	.globl _PX1
                                     23 	.globl _PT0
                                     24 	.globl _PX0
                                     25 	.globl _RD
                                     26 	.globl _WR
                                     27 	.globl _T1
                                     28 	.globl _T0
                                     29 	.globl _INT1
                                     30 	.globl _INT0
                                     31 	.globl _TXD
                                     32 	.globl _RXD
                                     33 	.globl _P3_7
                                     34 	.globl _P3_6
                                     35 	.globl _P3_5
                                     36 	.globl _P3_4
                                     37 	.globl _P3_3
                                     38 	.globl _P3_2
                                     39 	.globl _P3_1
                                     40 	.globl _P3_0
                                     41 	.globl _EA
                                     42 	.globl _ES
                                     43 	.globl _ET1
                                     44 	.globl _EX1
                                     45 	.globl _ET0
                                     46 	.globl _EX0
                                     47 	.globl _P2_7
                                     48 	.globl _P2_6
                                     49 	.globl _P2_5
                                     50 	.globl _P2_4
                                     51 	.globl _P2_3
                                     52 	.globl _P2_2
                                     53 	.globl _P2_1
                                     54 	.globl _P2_0
                                     55 	.globl _SM0
                                     56 	.globl _SM1
                                     57 	.globl _SM2
                                     58 	.globl _REN
                                     59 	.globl _TB8
                                     60 	.globl _RB8
                                     61 	.globl _TI
                                     62 	.globl _RI
                                     63 	.globl _P1_7
                                     64 	.globl _P1_6
                                     65 	.globl _P1_5
                                     66 	.globl _P1_4
                                     67 	.globl _P1_3
                                     68 	.globl _P1_2
                                     69 	.globl _P1_1
                                     70 	.globl _P1_0
                                     71 	.globl _TF1
                                     72 	.globl _TR1
                                     73 	.globl _TF0
                                     74 	.globl _TR0
                                     75 	.globl _IE1
                                     76 	.globl _IT1
                                     77 	.globl _IE0
                                     78 	.globl _IT0
                                     79 	.globl _P0_7
                                     80 	.globl _P0_6
                                     81 	.globl _P0_5
                                     82 	.globl _P0_4
                                     83 	.globl _P0_3
                                     84 	.globl _P0_2
                                     85 	.globl _P0_1
                                     86 	.globl _P0_0
                                     87 	.globl _B
                                     88 	.globl _ACC
                                     89 	.globl _PSW
                                     90 	.globl _IP
                                     91 	.globl _P3
                                     92 	.globl _IE
                                     93 	.globl _P2
                                     94 	.globl _SBUF
                                     95 	.globl _SCON
                                     96 	.globl _P1
                                     97 	.globl _TH1
                                     98 	.globl _TH0
                                     99 	.globl _TL1
                                    100 	.globl _TL0
                                    101 	.globl _TMOD
                                    102 	.globl _TCON
                                    103 	.globl _PCON
                                    104 	.globl _DPH
                                    105 	.globl _DPL
                                    106 	.globl _SP
                                    107 	.globl _P0
                                    108 	.globl _Writesingle7219_PARM_3
                                    109 	.globl _Writesingle7219_PARM_2
                                    110 	.globl _Write7219_PARM_2
                                    111 	.globl _Write7219
                                    112 	.globl _Writesingle7219
                                    113 ;--------------------------------------------------------
                                    114 ; special function registers
                                    115 ;--------------------------------------------------------
                                    116 	.area RSEG    (ABS,DATA)
      000000                        117 	.org 0x0000
                           000080   118 _P0	=	0x0080
                           000081   119 _SP	=	0x0081
                           000082   120 _DPL	=	0x0082
                           000083   121 _DPH	=	0x0083
                           000087   122 _PCON	=	0x0087
                           000088   123 _TCON	=	0x0088
                           000089   124 _TMOD	=	0x0089
                           00008A   125 _TL0	=	0x008a
                           00008B   126 _TL1	=	0x008b
                           00008C   127 _TH0	=	0x008c
                           00008D   128 _TH1	=	0x008d
                           000090   129 _P1	=	0x0090
                           000098   130 _SCON	=	0x0098
                           000099   131 _SBUF	=	0x0099
                           0000A0   132 _P2	=	0x00a0
                           0000A8   133 _IE	=	0x00a8
                           0000B0   134 _P3	=	0x00b0
                           0000B8   135 _IP	=	0x00b8
                           0000D0   136 _PSW	=	0x00d0
                           0000E0   137 _ACC	=	0x00e0
                           0000F0   138 _B	=	0x00f0
                                    139 ;--------------------------------------------------------
                                    140 ; special function bits
                                    141 ;--------------------------------------------------------
                                    142 	.area RSEG    (ABS,DATA)
      000000                        143 	.org 0x0000
                           000080   144 _P0_0	=	0x0080
                           000081   145 _P0_1	=	0x0081
                           000082   146 _P0_2	=	0x0082
                           000083   147 _P0_3	=	0x0083
                           000084   148 _P0_4	=	0x0084
                           000085   149 _P0_5	=	0x0085
                           000086   150 _P0_6	=	0x0086
                           000087   151 _P0_7	=	0x0087
                           000088   152 _IT0	=	0x0088
                           000089   153 _IE0	=	0x0089
                           00008A   154 _IT1	=	0x008a
                           00008B   155 _IE1	=	0x008b
                           00008C   156 _TR0	=	0x008c
                           00008D   157 _TF0	=	0x008d
                           00008E   158 _TR1	=	0x008e
                           00008F   159 _TF1	=	0x008f
                           000090   160 _P1_0	=	0x0090
                           000091   161 _P1_1	=	0x0091
                           000092   162 _P1_2	=	0x0092
                           000093   163 _P1_3	=	0x0093
                           000094   164 _P1_4	=	0x0094
                           000095   165 _P1_5	=	0x0095
                           000096   166 _P1_6	=	0x0096
                           000097   167 _P1_7	=	0x0097
                           000098   168 _RI	=	0x0098
                           000099   169 _TI	=	0x0099
                           00009A   170 _RB8	=	0x009a
                           00009B   171 _TB8	=	0x009b
                           00009C   172 _REN	=	0x009c
                           00009D   173 _SM2	=	0x009d
                           00009E   174 _SM1	=	0x009e
                           00009F   175 _SM0	=	0x009f
                           0000A0   176 _P2_0	=	0x00a0
                           0000A1   177 _P2_1	=	0x00a1
                           0000A2   178 _P2_2	=	0x00a2
                           0000A3   179 _P2_3	=	0x00a3
                           0000A4   180 _P2_4	=	0x00a4
                           0000A5   181 _P2_5	=	0x00a5
                           0000A6   182 _P2_6	=	0x00a6
                           0000A7   183 _P2_7	=	0x00a7
                           0000A8   184 _EX0	=	0x00a8
                           0000A9   185 _ET0	=	0x00a9
                           0000AA   186 _EX1	=	0x00aa
                           0000AB   187 _ET1	=	0x00ab
                           0000AC   188 _ES	=	0x00ac
                           0000AF   189 _EA	=	0x00af
                           0000B0   190 _P3_0	=	0x00b0
                           0000B1   191 _P3_1	=	0x00b1
                           0000B2   192 _P3_2	=	0x00b2
                           0000B3   193 _P3_3	=	0x00b3
                           0000B4   194 _P3_4	=	0x00b4
                           0000B5   195 _P3_5	=	0x00b5
                           0000B6   196 _P3_6	=	0x00b6
                           0000B7   197 _P3_7	=	0x00b7
                           0000B0   198 _RXD	=	0x00b0
                           0000B1   199 _TXD	=	0x00b1
                           0000B2   200 _INT0	=	0x00b2
                           0000B3   201 _INT1	=	0x00b3
                           0000B4   202 _T0	=	0x00b4
                           0000B5   203 _T1	=	0x00b5
                           0000B6   204 _WR	=	0x00b6
                           0000B7   205 _RD	=	0x00b7
                           0000B8   206 _PX0	=	0x00b8
                           0000B9   207 _PT0	=	0x00b9
                           0000BA   208 _PX1	=	0x00ba
                           0000BB   209 _PT1	=	0x00bb
                           0000BC   210 _PS	=	0x00bc
                           0000D0   211 _P	=	0x00d0
                           0000D1   212 _F1	=	0x00d1
                           0000D2   213 _OV	=	0x00d2
                           0000D3   214 _RS0	=	0x00d3
                           0000D4   215 _RS1	=	0x00d4
                           0000D5   216 _F0	=	0x00d5
                           0000D6   217 _AC	=	0x00d6
                           0000D7   218 _CY	=	0x00d7
                                    219 ;--------------------------------------------------------
                                    220 ; overlayable register banks
                                    221 ;--------------------------------------------------------
                                    222 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        223 	.ds 8
                                    224 ;--------------------------------------------------------
                                    225 ; internal ram data
                                    226 ;--------------------------------------------------------
                                    227 	.area DSEG    (DATA)
      000000                        228 _Write7219_PARM_2:
      000000                        229 	.ds 1
      000001                        230 _Writesingle7219_PARM_2:
      000001                        231 	.ds 1
      000002                        232 _Writesingle7219_PARM_3:
      000002                        233 	.ds 1
                                    234 ;--------------------------------------------------------
                                    235 ; overlayable items in internal ram
                                    236 ;--------------------------------------------------------
                                    237 ;--------------------------------------------------------
                                    238 ; indirectly addressable internal ram data
                                    239 ;--------------------------------------------------------
                                    240 	.area ISEG    (DATA)
                                    241 ;--------------------------------------------------------
                                    242 ; absolute internal ram data
                                    243 ;--------------------------------------------------------
                                    244 	.area IABS    (ABS,DATA)
                                    245 	.area IABS    (ABS,DATA)
                                    246 ;--------------------------------------------------------
                                    247 ; bit data
                                    248 ;--------------------------------------------------------
                                    249 	.area BSEG    (BIT)
                                    250 ;--------------------------------------------------------
                                    251 ; paged external ram data
                                    252 ;--------------------------------------------------------
                                    253 	.area PSEG    (PAG,XDATA)
                                    254 ;--------------------------------------------------------
                                    255 ; uninitialized external ram data
                                    256 ;--------------------------------------------------------
                                    257 	.area XSEG    (XDATA)
                                    258 ;--------------------------------------------------------
                                    259 ; absolute external ram data
                                    260 ;--------------------------------------------------------
                                    261 	.area XABS    (ABS,XDATA)
                                    262 ;--------------------------------------------------------
                                    263 ; initialized external ram data
                                    264 ;--------------------------------------------------------
                                    265 	.area XISEG   (XDATA)
                                    266 	.area HOME    (CODE)
                                    267 	.area GSINIT0 (CODE)
                                    268 	.area GSINIT1 (CODE)
                                    269 	.area GSINIT2 (CODE)
                                    270 	.area GSINIT3 (CODE)
                                    271 	.area GSINIT4 (CODE)
                                    272 	.area GSINIT5 (CODE)
                                    273 	.area GSINIT  (CODE)
                                    274 	.area GSFINAL (CODE)
                                    275 	.area CSEG    (CODE)
                                    276 ;--------------------------------------------------------
                                    277 ; global & static initialisations
                                    278 ;--------------------------------------------------------
                                    279 	.area HOME    (CODE)
                                    280 	.area GSINIT  (CODE)
                                    281 	.area GSFINAL (CODE)
                                    282 	.area GSINIT  (CODE)
                                    283 ;--------------------------------------------------------
                                    284 ; Home
                                    285 ;--------------------------------------------------------
                                    286 	.area HOME    (CODE)
                                    287 	.area HOME    (CODE)
                                    288 ;--------------------------------------------------------
                                    289 ; code
                                    290 ;--------------------------------------------------------
                                    291 	.area CSEG    (CODE)
                                    292 ;------------------------------------------------------------
                                    293 ;Allocation info for local variables in function 'Write7219'
                                    294 ;------------------------------------------------------------
                                    295 ;dat                       Allocated with name '_Write7219_PARM_2'
                                    296 ;address                   Allocated to registers r7 
                                    297 ;cnt                       Allocated to registers r6 
                                    298 ;------------------------------------------------------------
                                    299 ;	./src/write.c:6: void Write7219(unsigned char address, unsigned char dat)
                                    300 ;	-----------------------------------------
                                    301 ;	 function Write7219
                                    302 ;	-----------------------------------------
      000000                        303 _Write7219:
                           000007   304 	ar7 = 0x07
                           000006   305 	ar6 = 0x06
                           000005   306 	ar5 = 0x05
                           000004   307 	ar4 = 0x04
                           000003   308 	ar3 = 0x03
                           000002   309 	ar2 = 0x02
                           000001   310 	ar1 = 0x01
                           000000   311 	ar0 = 0x00
      000000 AF 82            [24]  312 	mov	r7,dpl
                                    313 ;	./src/write.c:9: LOAD = 0;
                                    314 ;	assignBit
      000002 C2 A1            [12]  315 	clr	_P2_1
                                    316 ;	./src/write.c:11: for(cnt=1; cnt<=matrixnum; cnt++)       // send address and data according to the nuber of your matrix
      000004 7E 01            [12]  317 	mov	r6,#0x01
      000006                        318 00102$:
                                    319 ;	./src/write.c:13: sendbyte(address, dat);
      000006 85*00*00         [24]  320 	mov	_sendbyte_PARM_2,_Write7219_PARM_2
      000009 8F 82            [24]  321 	mov	dpl,r7
      00000B C0 07            [24]  322 	push	ar7
      00000D C0 06            [24]  323 	push	ar6
      00000F 12r00r00         [24]  324 	lcall	_sendbyte
      000012 D0 06            [24]  325 	pop	ar6
      000014 D0 07            [24]  326 	pop	ar7
                                    327 ;	./src/write.c:11: for(cnt=1; cnt<=matrixnum; cnt++)       // send address and data according to the nuber of your matrix
      000016 0E               [12]  328 	inc	r6
      000017 EE               [12]  329 	mov	a,r6
      000018 24 FE            [12]  330 	add	a,#0xff - 0x01
      00001A 50 EA            [24]  331 	jnc	00102$
                                    332 ;	./src/write.c:16: LOAD = 1;                               // after the load becomes 1, will the 7-segment display display
                                    333 ;	assignBit
      00001C D2 A1            [12]  334 	setb	_P2_1
                                    335 ;	./src/write.c:17: }
      00001E 22               [24]  336 	ret
                                    337 ;------------------------------------------------------------
                                    338 ;Allocation info for local variables in function 'Writesingle7219'
                                    339 ;------------------------------------------------------------
                                    340 ;address                   Allocated with name '_Writesingle7219_PARM_2'
                                    341 ;dat                       Allocated with name '_Writesingle7219_PARM_3'
                                    342 ;chosen                    Allocated to registers r7 
                                    343 ;cnt                       Allocated to registers 
                                    344 ;------------------------------------------------------------
                                    345 ;	./src/write.c:20: void Writesingle7219(unsigned char chosen, unsigned char address, unsigned char dat)
                                    346 ;	-----------------------------------------
                                    347 ;	 function Writesingle7219
                                    348 ;	-----------------------------------------
      00001F                        349 _Writesingle7219:
      00001F AF 82            [24]  350 	mov	r7,dpl
                                    351 ;	./src/write.c:23: LOAD = 0;
                                    352 ;	assignBit
      000021 C2 A1            [12]  353 	clr	_P2_1
                                    354 ;	./src/write.c:25: for(cnt=matrixnum; cnt>chosen; cnt--) { // write data into the selected matrix
      000023 7E 01            [12]  355 	mov	r6,#0x01
      000025                        356 00104$:
      000025 C3               [12]  357 	clr	c
      000026 EF               [12]  358 	mov	a,r7
      000027 9E               [12]  359 	subb	a,r6
      000028 50 14            [24]  360 	jnc	00101$
                                    361 ;	./src/write.c:26: sendbyte(0x00, 0x00);               // write 0 to no-op
      00002A 75*00 00         [24]  362 	mov	_sendbyte_PARM_2,#0x00
      00002D 75 82 00         [24]  363 	mov	dpl,#0x00
      000030 C0 07            [24]  364 	push	ar7
      000032 C0 06            [24]  365 	push	ar6
      000034 12r00r00         [24]  366 	lcall	_sendbyte
      000037 D0 06            [24]  367 	pop	ar6
      000039 D0 07            [24]  368 	pop	ar7
                                    369 ;	./src/write.c:25: for(cnt=matrixnum; cnt>chosen; cnt--) { // write data into the selected matrix
      00003B 1E               [12]  370 	dec	r6
      00003C 80 E7            [24]  371 	sjmp	00104$
      00003E                        372 00101$:
                                    373 ;	./src/write.c:28: sendbyte(address, dat);             // sent data to chosen led-matrix
      00003E 85*02*00         [24]  374 	mov	_sendbyte_PARM_2,_Writesingle7219_PARM_3
      000041 85*01 82         [24]  375 	mov	dpl,_Writesingle7219_PARM_2
      000044 C0 07            [24]  376 	push	ar7
      000046 12r00r00         [24]  377 	lcall	_sendbyte
      000049 D0 07            [24]  378 	pop	ar7
                                    379 ;	./src/write.c:30: for (cnt=chosen-1; cnt>=1; cnt--) { 
      00004B 1F               [12]  380 	dec	r7
      00004C                        381 00107$:
      00004C BF 01 00         [24]  382 	cjne	r7,#0x01,00130$
      00004F                        383 00130$:
      00004F 40 10            [24]  384 	jc	00102$
                                    385 ;	./src/write.c:31: sendbyte(0x00, 0x00);               // write 0 to no-op
      000051 75*00 00         [24]  386 	mov	_sendbyte_PARM_2,#0x00
      000054 75 82 00         [24]  387 	mov	dpl,#0x00
      000057 C0 07            [24]  388 	push	ar7
      000059 12r00r00         [24]  389 	lcall	_sendbyte
      00005C D0 07            [24]  390 	pop	ar7
                                    391 ;	./src/write.c:30: for (cnt=chosen-1; cnt>=1; cnt--) { 
      00005E 1F               [12]  392 	dec	r7
      00005F 80 EB            [24]  393 	sjmp	00107$
      000061                        394 00102$:
                                    395 ;	./src/write.c:34: LOAD = 1;
                                    396 ;	assignBit
      000061 D2 A1            [12]  397 	setb	_P2_1
                                    398 ;	./src/write.c:35: }
      000063 22               [24]  399 	ret
                                    400 	.area CSEG    (CODE)
                                    401 	.area CONST   (CODE)
                                    402 	.area XINIT   (CODE)
                                    403 	.area CABS    (ABS,CODE)
